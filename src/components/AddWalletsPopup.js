import { useState, useEffect } from 'react';
import Popup from './Popup.js';

function AddWalletsPopup(props) {
  const [buttonDisabled, setButtonDisabled] = useState(true);
  const placeholder = "–í—Å—Ç–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å–∞ –∫–æ—à–µ–ª—å–∫–æ–≤, –≤ —Ñ–æ—Ä–º–∞—Ç–µ @wallet, wallet –∏–ª–∏ wallet.tg, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–æ–º –∏–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å–æ–º —Å—Ç—Ä–æ–∫–∏";

  const regexWordSeparator = /\s+|\S+/g;
  const regexSpaceChar = /\s+/;
  const regexError = /^@?[A-Za-z0-9_]{5,32}(\.tg)?$/;
  const regexErrorSyntax = /^@?[A-Za-z0-9_]+(\.tg)?$/;

  const [addresses, setAddresses] = useState(''); //–ß–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç
  const [modifiedText, setModifiedText] = useState([]); //–¢–µ–∫—Å—Ç —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –æ—à–∏–±–æ–∫

  const [errorClassSyntax, setErrorClassSyntax] = useState('');
  const [errorClassLength, setErrorClassLength] = useState('');

  function handleChange(e) {
    const text = e.target.value;
    let processedText = []; //–¢–µ–∫—Å—Ç, –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π –≤ –º–∞—Å—Å–∏–≤ —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –æ—à–∏–±–æ–∫

    const errValues = { //–û–±—ä–µ–∫—Ç —Å –∫–ª–∞—Å—Å–∞–º–∏ –æ—à–∏–±–æ–∫
      'syntax': '',
      'length': '',
      'bot': ''
    };

    for (let match; match = regexWordSeparator.exec(text);) { //–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Å–ª–æ–≤–∞ –∏ –ø—Ä–æ–±–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
      const matchText = match[0];

      const checkingSpaceChar = !regexSpaceChar.test(matchText); //–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–æ–±–µ–ª
      const checkingError = !regexError.test(matchText); //–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É –≤ —Å–ª–æ–≤–µ

      if (checkingError && checkingSpaceChar) {
        processedText.push(
          <span key={`error-${regexWordSeparator.lastIndex}`} className={WhatMistake(matchText, errValues)}>
            {matchText}
          </span>
        );
      } else {
        processedText.push(matchText);
      }
    }

    if (text[text.length - 1] === '\n') processedText.push(<br key={0} />) //–ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª —è–≤–ª—è–µ—Ç—Å—è –ø–µ—Ä–µ–Ω–æ—Å–æ–º —Å—Ç—Ä–æ–∫–∏, —Ç–æ –æ–Ω –Ω–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω, –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–µ–Ω br

    const content = <p className="popup__textarea-copy-text">{processedText}</p>;

    if (errValues.syntax) errValues.bot = ' popup__error-length-bot'; //–û—à–∏–±–∫–∞ –¥–ª–∏–Ω—ã –º–æ–∂–µ—Ç –±—ã—Ç—å 1 –∏–ª–∏ 2 –±–ª–æ–∫–æ–º, –≤–æ 2 —Å–ª—É—á–∞–µ –Ω—É–∂–µ–Ω –∫–ª–∞—Å—Å

    setAddresses(text)
    setModifiedText(content)
    setErrorClassSyntax(errValues.syntax);
    setErrorClassLength(errValues.length + errValues.bot); //–£ bot –≤–Ω–∞—á–∞–ª–µ –ø—Ä–æ–±–µ–ª, —á—Ç–æ–±—ã –Ω–µ —Å–ª–∏–ø–ª–∏—Å—å

    const isTextValid = text.trim() !== '' && !errValues.syntax && !errValues.length && !errValues.bot;
    setButtonDisabled(!isTextValid);
  }

  function WhatMistake(matchText, errValues) {
    const checkingErrorSyntax = !regexErrorSyntax.test(matchText);

    if (checkingErrorSyntax) {
      errValues.syntax = 'popup__error_visible';
      return 'span-error_syntax';
    }
    errValues.length = 'popup__error_visible';
    return 'span-error_length';
  }

  function handleSubmit(e) {
    e.preventDefault();

    if (!buttonDisabled) {
      const walletAddresses = addresses.toLowerCase().split(/\s+/).filter(Boolean).map(address => {
        address = address.replace('@', '');
        if (!address.endsWith('.tg')) {
          return address + '.tg';
        }
        return address;
      });

      const walletAddressesUnique = Array.from(new Set(walletAddresses));
      props.addWalletAddresses(walletAddressesUnique);
      props.closeAllPopups();
    }
  }

  useEffect(() => {
    document.querySelector('.popup__textarea').addEventListener("scroll", handleScroll);
  }, []);

  function handleScroll() { //–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫—Ä–æ–ª–∞ –¥–ª—è textarea-copy
    const scrollY = document.querySelector('.popup__textarea').scrollTop;
    document.querySelector('.popup__textarea-copy').scrollTo(0, scrollY);
  };

  return (
    <Popup closeAllPopups={props.closeAllPopups}>
      <form className="popup__form" action="#" name="hot-form" onSubmit={handleSubmit}>
        <div className="popup__textarea-container">
          <div className="popup__textarea-copy">{modifiedText}</div>
          <textarea className="popup__textarea" type="text" name="addresses" onChange={handleChange} placeholder={placeholder} spellcheck="false"></textarea>
        </div>
        <div className="popup__errors">
          <span className={`popup__error popup__error-syntax ${errorClassSyntax}`}>üü• –ê–¥—Ä–µ—Å –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª—ã a-z, 0-9 –∏ _</span>
          <span className={`popup__error popup__error-length ${errorClassLength}`}>üüß –î–ª–∏–Ω–∞ –∞–¥—Ä–µ—Å–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 5 –¥–æ 32 —Å–∏–º–≤–æ–ª–æ–≤</span>
        </div>
        <button className={`popup__button-submit ${buttonDisabled && 'popup__button-submit_disabled'}`} type="submit" disabled={buttonDisabled}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
      </form>
    </Popup>
  );
}

export default AddWalletsPopup;